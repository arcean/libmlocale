#!/usr/bin/make -f
# -*- makefile -*-
# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

DEB_BUILD_ARCH := $(shell dpkg-architecture -qDEB_BUILD_ARCH)

DEBDIR = ..

comma :=,
empty :=
space := $(empty) $(empty)

MAKEDOCS = 1

ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
    INSTALL_PROGRAM += -s
endif

TMP_BUILD_OPTS = $(subst $(comma),$(space),$(DEB_BUILD_OPTIONS))

ifneq (,$(filter parallel=%,$(TMP_BUILD_OPTS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(TMP_BUILD_OPTS)))
    PARALLEL_MAKEFLAGS += -j$(NUMJOBS)
endif


# Enable instrumentation by setting DEB_BUILD_OPTION=coverage,...
ifneq (,$(filter coverage,$(TMP_BUILD_OPTS)))
    OPTIONS += -coverage
endif

# Disable building of tests by setting DEB_BUILD_OPTION=notests,...
ifneq (,$(filter notests,$(TMP_BUILD_OPTS)))
    OPTIONS += -nomake tests
    EXCLUSIONS += --no-package=libmlocale-tests
    EXCLUSIONS += --no-package=libmlocale-tests-dbg
endif

# Disable building of benchmarks by setting DEB_BUILD_OPTION=nobenchmarks,...
ifneq (,$(filter nobenchmarks,$(TMP_BUILD_OPTS)))
    OPTIONS += -nomake benchmarks
    EXCLUSIONS += --no-package=libmlocale-benchmarks
    EXCLUSIONS += --no-package=libmlocale-benchmarks-dbg
endif

# When doing official releases, set TESTABILITY to off. Defaults to on now
# because integration cannot pass DEB_BUILD_OPTIONS.
ifeq (,$(findstring notestability,$(DEB_BUILD_OPTIONS)))
     OPTIONS += -testable
endif

# Perform a minimal build by setting DEB_BUILD_OPTION=minimal,...
ifeq (,$(findstring minimal,$(DEB_BUILD_OPTIONS)))
     OPTIONS += -make "tests benchmarks"
else
     OPTIONS += -minimal
     MAKEDOCS = 0
endif

# Don't build documentation by setting DEB_BUILD_OPTION=nodocs,...
ifneq (,$(findstring nodocs,$(DEB_BUILD_OPTIONS)))
     MAKEDOCS = 0
     EXCLUSIONS += --no-package=libmlocale-doc
endif

# enable debug logging in development versions
export LOGDEBUG = $(shell head -n 1 debian/changelog | grep '~' > /dev/null 2> /dev/null && echo yes || echo no)

BUILD_DIR = build-$(DEB_BUILD_ARCH)

configure: configure-stamp
configure-stamp:
	dh_testdir

	mkdir -p $(BUILD_DIR)
	cd $(BUILD_DIR) && ../configure --prefix=/usr -release $(OPTIONS)

	touch configure-stamp

build: build-stamp
build-stamp: configure-stamp
	dh_testdir

	cd $(BUILD_DIR) && make $(PARALLEL_MAKEFLAGS)

	touch build-stamp

clean:
	dh_testdir
	dh_testroot

	rm -f build-stamp configure-stamp

	rm -rf $(BUILD_DIR)

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs $(EXCLUSIONS)

	# Add here commands to install the package into debian/tmp

	#libmeegotouch-doc package
ifneq (0,$(MAKEDOCS))
	cd $(BUILD_DIR) && make $(PARALLEL_MAKEFLAGS) doc
endif

	cd $(BUILD_DIR) && INSTALL_ROOT=$(CURDIR)/debian/tmp make $(PARALLEL_MAKEFLAGS) install

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir $(EXCLUSIONS)
	dh_testroot $(EXCLUSIONS)
	dh_installchangelogs $(EXCLUSIONS)
	dh_installdocs $(EXCLUSIONS)
	dh_install --sourcedir=debian/tmp $(EXCLUSIONS) -v
	# print warnings for not installed files
	dh_install --sourcedir=debian/tmp/ $(EXCLUSIONS) --list-missing
	dh_link $(EXCLUSIONS)
	dh_strip -p libmlocale0 --dbg-package=libmlocale0
	dh_strip -p libmlocale-tests --dbg-package=libmlocale-tests
	dh_strip -p libmlocale-benchmarks --dbg-package=libmlocale-benchmarks
	dh_compress $(EXCLUSIONS)
	dh_fixperms $(EXCLUSIONS)
	dh_makeshlibs $(EXCLUSIONS)
	dh_installdeb $(EXCLUSIONS)
	dh_shlibdeps $(EXCLUSIONS) -V
	dh_gencontrol $(EXCLUSIONS)
	dh_md5sums $(EXCLUSIONS)
	dh_builddeb --destdir=$(DEBDIR) $(EXCLUSIONS)

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
